{"version":3,"sources":["assets/images/noise_texture.png","styles/GlobalStyles.js","styles/theme.js","constants/routes.js","components/generic/button/resetButtonStyle.js","components/generic/button/Button.jsx","constants/config.js","types/Sound.js","components/Soundboard/SoundButton.jsx","constants/playStates.js","components/Soundboard/soundConfig.js","components/Soundboard/Soundboard.jsx","components/Main.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","GlobalStyles","createGlobalStyle","theme","typography","base","fontFamily","title","baseFonts","palette","primary","lighter","light","main","dark","darker","secondary","tertiary","obsidian","mainHighlight","green","orange","join","css","accents","Button","styled","props","ref","useRef","buttonProps","useButton","className","children","resetButtonStyle","noiseTexture","accent","SOUND_PATH","process","Sound","this","name","filename","path","SoundButton","sound","useState","playState","setPlayState","Audio","audio","stop","useCallback","pause","currentTime","useEffect","addEventListener","removeEventListener","onPress","volume","play","Soundboard","sounds","soundConfig","map","entry","key","Main","WebFont","load","google","families","App","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb8dea88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noise_texture.949c2f47.png\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    height: auto;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: ${({ theme }) => theme.typography.base.fontFamily};\n    width: 100%;\n    min-height: 100%;\n  }\n\n  h1, h2 {\n    font-family: ${({ theme }) => theme.typography.title.fontFamily};\n  }\n`;\n\nexport default GlobalStyles;\n","const baseFonts = [\n  'Jockey One',\n  'Open Sans',\n  'Roboto',\n  'Helvetica Neue',\n  'Arial',\n  'sans-serif',\n];\n\nexport default {\n  palette: {\n    primary: {\n      lighter: '#FFCF74',\n      light: '#FFC14A',\n      main: '#FDB01F',\n      dark: '#D48C02',\n      darker: '#A76D00',\n    },\n    secondary: {\n      lighter: '#7E6ACC',\n      light: '#5E45B9',\n      main: '#4428AE',\n      dark: '#2D1392',\n      darker: '#220C73',\n    },\n    tertiary: {\n      lighter: '#57C0B8',\n      light: '#31A89F',\n      main: '#139B92',\n      dark: '#018279',\n      darker: '#00675F',\n    },\n    obsidian: {\n      mainHighlight: '#3a383e',\n      main: '#343238',\n      dark: '#242128',\n    },\n    green: {\n      lighter: '#57C0B8',\n      light: '#31A89F',\n      main: '#139B92',\n      dark: '#018279',\n      darker: '#00675F',\n    },\n    orange: {\n      lighter: '#FFCF74',\n      light: '#FFC14A',\n      main: '#FDB01F',\n      dark: '#D48C02',\n      darker: '#A76D00',\n    },\n    typography: {\n      light: '#fefefe',\n    },\n  },\n  typography: {\n    base: {\n      fontFamily: baseFonts.join(','),\n    },\n    title: {\n      fontFamily: baseFonts.join(','),\n    },\n  },\n};\n","export const ROOT = '';\nexport const SUB_ROUTE = `${ROOT}/other-route-goes-here`;\n","import { css } from 'styled-components/macro';\n\n/**\n * Resets <button> element native styles.\n */\nexport default css`\n  background-color: transparent;\n  color: inherit;\n  border: none;\n  font-family: ${({ theme }) => theme.typography.base.fontFamily};\n`;\n","/* eslint-disable react/button-has-type */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useRef } from 'react';\nimport styled from 'styled-components/macro';\nimport PropTypes from 'prop-types';\nimport { useButton } from '@react-aria/button';\n\nimport resetButtonStyle from './resetButtonStyle';\nimport noiseTexture from '../../../assets/images/noise_texture.png';\n\n/**\n * Accent colors\n */\nexport const accents = {\n  GREEN: 'green',\n  ORANGE: 'orange',\n  RED: 'red',\n};\n\n/**\n * Base button component.\n */\nconst ButtonStructure = (props) => {\n  const ref = useRef();\n  const { buttonProps } = useButton(props, ref);\n  const { className, children } = props;\n\n  return (\n    <button {...buttonProps} className={className}>\n      {children}\n    </button>\n  );\n};\n\nconst padding = '5px';\nconst Button = styled(ButtonStructure)`\n  ${resetButtonStyle}\n\n  position: relative;\n  padding: 1rem;\n  background-color: ${({ theme }) => theme.palette.obsidian.main};\n  border-radius: 3px;\n  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.16);\n  font-size: 1.2rem;\n  outline: none;\n\n  ::before {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    opacity: 0.15;\n    background-image: url(${noiseTexture});\n    background-repeat: repeat;\n  }\n\n  ::after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: ${padding};\n    right: ${padding};\n    top: ${padding};\n    bottom: ${padding};\n    border-width: 1px;\n    border-style: solid;\n    border-image-slice: 1;\n    border-image-source: linear-gradient(\n      to bottom right,\n      ${({ accent, theme }) => theme.palette[accent].main},\n      ${({ accent, theme }) => theme.palette[accent].main}77\n    );\n  }\n\n  &:hover,\n  &:focus,\n  &:active {\n    box-shadow: 0 0px 5px rgba(0, 0, 0, 0.16);\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.palette.obsidian.mainHighlight};\n\n    ::after {\n      border-image-source: linear-gradient(\n        to bottom right,\n        ${({ accent, theme }) => theme.palette[accent].lighter},\n        ${({ accent, theme }) => theme.palette[accent].lighter}77\n      );\n    }\n  }\n`;\n\nButtonStructure.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Button;\n","export const SOUND_PATH = `${process.env.PUBLIC_URL}/assets/sound`;\nexport const DEFAULT_VOLUME = 0.5;\n","import { SOUND_PATH } from '../constants/config';\n\n/**\n * Describes a sound file.\n */\nclass Sound {\n  constructor(props) {\n    this.name = props.name;\n    this.filename = props.filename;\n    this.path = `${SOUND_PATH}/${props.filename}`;\n  }\n}\n\nexport default Sound;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components/macro';\nimport PropTypes from 'prop-types';\n\nimport Button, { accents } from '../generic/button/Button';\n\nimport Sound from '../../types/Sound';\nimport { PLAYING, STOPPED } from '../../constants/playStates';\nimport { DEFAULT_VOLUME } from '../../constants/config';\n\n/**\n * Button that plays a sound.\n */\nconst SoundButtonStructure = ({ sound, className }) => {\n  const [playState, setPlayState] = useState(STOPPED);\n\n  const [audio] = useState(new Audio(sound.path));\n\n  const stop = useCallback(() => {\n    setPlayState(STOPPED);\n    audio.pause();\n    audio.currentTime = 0.0;\n  }, [audio]);\n\n  const play = () => {\n    audio.currentTime = 0.0;\n    audio.volume = DEFAULT_VOLUME;\n    setPlayState(PLAYING);\n    audio.play();\n  };\n\n  useEffect(() => {\n    audio.addEventListener('ended', stop);\n\n    return () => audio.removeEventListener('ended', stop);\n  }, [audio, stop]);\n\n  const accent = playState === PLAYING ? accents.GREEN : accents.ORANGE;\n\n  return (\n    <Button className={className} onPress={play} accent={accent}>\n      {sound.name}\n    </Button>\n  );\n};\n\nconst SoundButton = styled(SoundButtonStructure)`\n  width: 100%;\n  height: 100%;\n`;\n\nSoundButtonStructure.propTypes = {\n  sound: PropTypes.instanceOf(Sound).isRequired,\n  className: PropTypes.string,\n};\n\nexport default SoundButton;\n","/**\n * Sound playing states.\n */\nexport const PLAYING = 'PLAYING';\nexport const STOPPED = 'STOPPED';\n","/**\n * Sound file configuration\n */\nexport default [\n  {\n    name: 'Noni',\n    filename: 'noni.ogg',\n  },\n  {\n    name: 'Tuuletus',\n    filename: 'tuuletus.ogg',\n  },\n  {\n    name: 'Pelokas nauru',\n    filename: 'fearful_laugh.ogg',\n  },\n  {\n    name: 'Semihyvin',\n    filename: 'semihyvin.ogg',\n  },\n];\n","import React from 'react';\nimport styled from 'styled-components/macro';\nimport PropTypes from 'prop-types';\n\nimport SoundButton from './SoundButton';\n\nimport Sound from '../../types/Sound';\nimport soundConfig from './soundConfig';\n\nconst SoundboardStructure = ({ className }) => {\n  const sounds = soundConfig.map((entry) => new Sound(entry));\n\n  return (\n    <div className={className}>\n      {sounds.map((sound) => (\n        <SoundButton key={sound.name} sound={sound} />\n      ))}\n    </div>\n  );\n};\n\nconst Soundboard = styled(SoundboardStructure)`\n  display: grid;\n  grid-auto-rows: 1fr;\n  grid-template-columns: repeat(auto-fill, minmax(8rem, 1fr));\n  grid-gap: 1rem;\n  padding: 1rem;\n\n  ::before {\n    content: '';\n    width: 0;\n    padding-bottom: 100%;\n    grid-row: 1 / 1;\n    grid-column: 1 / 1;\n  }\n\n  & > :first-child {\n    grid-row: 1 / 1;\n    grid-column: 1 / 1;\n  }\n`;\n\nSoundboardStructure.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Soundboard;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport Soundboard from './Soundboard/Soundboard';\n\nconst MainStructure = ({ className }) => {\n  return (\n    <div className={className}>\n      <Soundboard />\n    </div>\n  );\n};\n\nconst Main = styled(MainStructure)`\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  background-color: ${({ theme }) => theme.palette.obsidian.dark};\n  color: ${({ theme }) => theme.palette.typography.light};\n`;\n\nMainStructure.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Main;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport WebFont from 'webfontloader';\n\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport theme from './styles/theme';\nimport * as routes from './constants/routes';\n\n/* Don't fear the wrappers! Start editing your home page in the Main component. */\nimport Main from './components/Main';\n\nWebFont.load({\n  google: {\n    families: ['Jockey One:400', 'Open Sans:300,400,600,800'],\n  },\n});\n\nconst App = function AppContent() {\n  return (\n    <ThemeProvider theme={theme}>\n      <>\n        <GlobalStyles />\n\n        <Router>\n          <Switch>\n            <Route path={routes.ROOT} component={Main} />\n          </Switch>\n        </Router>\n      </>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}